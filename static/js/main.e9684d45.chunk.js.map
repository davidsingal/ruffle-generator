{"version":3,"sources":["RaffleForm/index.js","RaffleTicket/index.js","App.js","serviceWorker.js","index.js"],"names":["RaffleForm","handleSubmit","values","onChange","_this","props","defaultValues","this","react_default","a","createElement","esm","className","initialValues","onSubmit","htmlFor","type","id","field","onClick","window","print","PureComponent","defaultProps","RaffleTicket","_this$props","title","description","price","number","RuffleNumber","num","size","arguments","length","undefined","s","formatNumber","App","state","numberOfTickets","onRaffleFormChange","setState","_this2","tickets","Array","fill","src_RaffleForm","map","t","i","key","concat","src_RaffleTicket","Object","assign","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e9684d45.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport { Form, Text, TextArea } from 'informed';\n\nimport './style.css';\n\nclass RaffleForm extends PureComponent {\n  static defaultProps = {\n    defaultValues: {},\n    onChange: () => null\n  }\n\n  handleSubmit = (values) => {\n    const { onChange } = this.props;\n    onChange(values);\n  }\n\n  render() {\n    const { defaultValues } = this.props;\n\n    return (\n      <Form\n        className=\"raffle-form\"\n        initialValues={defaultValues}\n        onSubmit={this.handleSubmit}\n      >\n        <div className=\"form-group\">\n          <label htmlFor=\"title\">\n            Título\n          </label>\n          <Text\n            type=\"text\"\n            id=\"title\"\n            field=\"title\"\n            className=\"form-control\"\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"description\">\n            Descripción\n          </label>\n          <TextArea field=\"description\" id=\"description\" className=\"form-control\" />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"price\">\n            Precio de participación (€)\n          </label>\n          <Text type=\"number\" field=\"price\" id=\"price\" className=\"form-control\" />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"numberOfTickets\">\n            Número de boletos\n          </label>\n          <Text\n            type=\"number\"\n            field=\"numberOfTickets\"\n            id=\"numberOfTickets\"\n            className=\"form-control\"\n          />\n        </div>\n        <div className=\"-actions\">\n          <button type=\"submit\" className=\"btn btn-primary\">Generar</button>\n          <button type=\"button\" className=\"btn btn-secondary\" onClick={() => window.print()}>Imprimir</button>\n        </div>\n        <div>\n          <p className=\"small\">This tool has been made with love for Andrés Inga.</p>\n        </div>\n      </Form>\n    );\n  }\n}\n\nexport default RaffleForm;\n","import React, { PureComponent } from 'react';\n\nimport './style.css';\n\nfunction formatNumber(num, size = 4) {\n  let s = num + '';\n  while (s.length < size) s = '0' + s;\n  return s;\n}\n\nclass RaffleTicket extends PureComponent {\n  static defaultProps = {\n    title: 'Viaje de fin de curso',\n    description: 'Lorem ipsum',\n    price: 1,\n    number: 1\n  }\n\n  render() {\n    const { title, description, price, number } = this.props;\n\n    const RuffleNumber = () => (\n      <span className=\"number text-primary\">{formatNumber(number)}</span>\n    );\n\n    return (\n      <div className=\"raffle-ticket\">\n        <div className=\"row\">\n          <div className=\"col-3\">\n            <form>\n              <div className=\"form-group\">\n                <label>Nombre:</label>\n                <input type=\"text\" className=\"form-control -user-fill\" />\n              </div>\n              <div className=\"form-group\">\n                <label>Telf.:</label>\n                <input type=\"text\" className=\"form-control -user-fill\" />\n              </div>\n              <RuffleNumber />\n            </form>\n          </div>\n          <div className=\"col-1\">\n            <div className=\"separator\" />\n          </div>\n          <div className=\"col-8\">\n            <div className=\"content\">\n              <h1>Sorteo</h1>\n              <h2>{title}</h2>\n              <p>{description}</p>\n            </div>\n            <footer className=\"row\">\n              <div className=\"col\">\n                <span className=\"price\">{price}€</span>\n              </div>\n              <div className=\"col text-right\">\n                <RuffleNumber />\n              </div>\n            </footer>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default RaffleTicket;\n","import React, { Component } from 'react';\nimport RaffleForm from './RaffleForm';\nimport RaffleTicket from './RaffleTicket';\n\nimport './App.css';\n\nclass App extends Component {\n\n  state = {\n    title: 'Viaje de fin de curso',\n    description: '',\n    price: 1,\n    numberOfTickets: 1\n  }\n\n  onRaffleFormChange = (values = {}) => {\n    const { title, description, numberOfTickets, price } = values;\n    this.setState({ title, description, numberOfTickets, price });\n  }\n\n  render() {\n    const { numberOfTickets } = this.state;\n    const tickets = new Array(numberOfTickets).fill(0);\n\n    return (\n      <div className=\"app\">\n        <div className=\"form-region\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col\">\n                <h1>Generador de rifas</h1>\n                <RaffleForm defaultValues={this.state} onChange={this.onRaffleFormChange} />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"result-region\">\n          <div className=\"container-fluid\">\n            <div className=\"row\">\n              {tickets.map((t, i) => (\n                <div className=\"col-6\" key={`ticket${i}`}>\n                  <RaffleTicket {...this.state} number={i} />\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}